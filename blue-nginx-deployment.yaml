apiVersion: v1
kind: ConfigMap
metadata:
  name: blue-nginx-html
  labels:
    app: blue-nginx
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
    <title>Blue Nginx</title>
    <style>
      body {
        background-color: #3399ff;
        color: white;
        font-family: sans-serif;
        text-align: center;
        padding-top: 50px;
      }
    </style>
    </head>
    <body>
      <h1>Welcome to the Blue Deployment!</h1>
      <p>This is a test Nginx server for deployment testing.</p>
    </body>
    </html>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: blue-nginx-conf
  labels:
    app: blue-nginx
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        server {
            listen 8080;
            server_name localhost;
            
            # /blue 경로를 index.html로 직접 서빙
            location ~ ^/blue/?$ {
                alias /usr/share/nginx/html/index.html;
            }
            
            # /blue/ 하위 경로들
            location /blue/ {
                alias /usr/share/nginx/html/;
                try_files $uri $uri/ /index.html;
            }
            
            # 루트 경로 처리
            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blue-nginx-deployment
  labels:
    app: blue-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blue-nginx
  template:
    metadata:
      labels:
        app: blue-nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.25
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nginx-html
          mountPath: /usr/share/nginx/html
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-html
        configMap:
          name: blue-nginx-html
      - name: nginx-conf
        configMap:
          name: blue-nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: blue-nginx-service
spec:
  selector:
    app: blue-nginx
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: blue-nginx-ingress
  annotations:
    # AWS Load Balancer Controller 설정 (argo-ingress.yaml과 동일하게 맞춤)
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    
    # ArgoCD와 같은 ALB를 공유하기 위한 그룹 설정
    alb.ingress.kubernetes.io/group.name: "argocd-alb"
    
    # Nginx 백엔드 설정
    alb.ingress.kubernetes.io/backend-protocol: HTTP
spec:
  rules:
  - http:
      paths:
      - path: /blue
        pathType: Prefix
        backend:
          service:
            name: blue-nginx-service
            port:
              number: 8080
